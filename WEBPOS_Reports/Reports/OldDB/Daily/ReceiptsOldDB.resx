<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="sqlDataSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="customSqlQuery1.Sql" xml:space="preserve">
    <value>-- declare @FromDate datetime = '2016-05-30', @ToDate  datetime = '2016-05-30'


select  
 a.IsDeleted,
 Abbreviation = a.Abbreviation,
    a.Counter,
    Day = a.Day,
    AccountId = t.AccountId,
    AccountType = t.AccountType,
    AccountDescription = t.AccountDescription,
    DepartmentId = a.DepartmentId ,
    DepartmentDescription = a.DepartmentDescription,
    PosInfoId = a.PosInfoId,
    PosInfoCode = a.PosInfoCode,
    PosInfoDescription = a.PosInfoDescription,
    TableCode = a.TableCode,
    Room = t.Room,
    InvoiceType = a.InvoiceType,
    vat1 = case InvoiceTotal when 0 then odiv.Vat1 else  odiv.Vat1 * (t.TransAmount / a.InvoiceTotal) end,
    vat2 = case InvoiceTotal when 0 then odiv.Vat2 else  odiv.Vat2 * (t.TransAmount / a.InvoiceTotal) end,
    vat3 = case InvoiceTotal when 0 then odiv.Vat3 else  odiv.Vat3 * (t.TransAmount / a.InvoiceTotal) end,
    vat4 = case InvoiceTotal when 0 then odiv.Vat4 else  odiv.Vat4 * (t.TransAmount / a.InvoiceTotal) end,
    vat5 = case InvoiceTotal when 0 then odiv.Vat5 else  odiv.Vat5 * (t.TransAmount / a.InvoiceTotal) end,
    Vat1Pst = odiv.Vat1Pst,
    Vat2Pst = odiv.Vat2Pst,
    Vat3Pst = odiv.Vat3Pst,
    Vat4Pst = odiv.Vat4Pst,
    Vat5Pst = odiv.Vat5Pst,
    TransAmount = t.TransAmount,
    InvoiceTotal = a.InvoiceTotal,
    InvoiceDiscount = a.InvoiceDiscount,
    InvoiceDiscountRemark = a.InvoiceDiscountRemark,
    IsVoided = a.IsVoided,
    IsPaid = case when t.TransAmount &gt; 0 then 1 else 0 end,
    StaffCode = a.StaffCode,
    StafName = a.StafName,
    FODay = a.FODay,
    NotAudited = a.NotAudited from (

 select distinct Id = i.Id,
     IsDeleted = i.isDeleted,
     Abbreviation = it.Abbreviation,
     i.Counter,
     Day = i.Day,
     DepartmentId = cast (d.Id as bigint),
     DepartmentDescription = d.Description,
     PosInfoId = i.PosInfoId,
     PosInfoCode = pi.Code,
     PosInfoDescription = pi.Description,
     TableCode = tbl.Code,
    -- Room = t.Room,
     InvoiceType = it.Type,
               
     InvoiceTotal = i.Total,
     InvoiceDiscount = i.Discount,
     InvoiceDiscountRemark = i.DiscountRemark,
     IsVoided = i.IsVoided,
   --  IsPaid = i.IsPaid,
     StaffCode = st.Code,
     StafName = st.LastName + ' ' + st.FirstName,
     FODay = CAST(IsNull(eod.FODay, getdate()) AS DATE),
     NotAudited = IsNull(i.EndOfDayId, 0)
 from Invoices i
    join OrderDetailInvoices odi on i.id = odi.InvoicesId 
    join InvoiceTypes it on i.InvoiceTypeId = it.Id and it.Type != 3 and it.Type != 8
    left outer join [Table] tbl on i.TableId = tbl.Id
    join staff st on st.Id = i.StaffId
    join PosInfo pi on i.PosInfoId = pi.id
    left outer join Department d on pi.DepartmentId = d.Id
    left outer join EndOfDay eod on i.EndOfDayId = eod.Id  
    where IsNull(i.IsDeleted, 0) = 0 and IsNull(eod.FODay, cast(getdate() AS DATE))  &gt;= cast(@FromDate AS DATE)
                   and IsNull(eod.FODay, cast(getdate() AS DATE))  &lt;= cast(@ToDate  AS DATE)

 ) a 
 inner join (
 
  Select 
   InvoicesId,
   Vat1 = Sum(vat1), 
   Vat2 = Sum(vat2), 
   Vat3 = Sum(vat3), 
   Vat4 = Sum(vat4), 
   Vat5 = Sum(vat5),
   Vat1Pst = max(Vat1Pst),
   Vat2Pst = max(Vat2Pst),
   Vat3Pst = max(Vat3Pst),
   Vat4Pst = max(Vat4Pst),
   Vat5Pst = max(Vat5Pst)
  from ( 
    select  InvoicesId, 
      Vat1= case v.Code when 1 then od.TotalAfterDiscount else 0 end,
      Vat2= case v.Code when 2 then od.TotalAfterDiscount else 0 end,
      Vat3= case v.Code when 3 then od.TotalAfterDiscount else 0 end,
      Vat4= case v.Code when 4 then od.TotalAfterDiscount else 0 end,
      Vat5= case v.Code when 5 then od.TotalAfterDiscount else 0 end,
      Vat1Pst= case v.Code when 1 THEN v.Percentage else 0 end,
      Vat2Pst= case v.Code when 2 then v.Percentage else 0 end,
      Vat3Pst= case v.Code when 3 then v.Percentage else 0 end,
      Vat4Pst= case v.Code when 4 then v.Percentage else 0 end,
      Vat5Pst= case v.Code when 5 then v.Percentage else 0 end
    from OrderDetailInvoices odi
    LEFT OUTER Join OrderDetail od ON od.Id = odi.OrderDetailId
    LEFT OUTER JOIN OrderDetailVatAnal odva on od.Id = odva.OrderDetailId
    LEFT OUTER JOIN Vat v ON v.Id = odva.VatId
    where IsNull(odi.IsDeleted, 0) != 1 
    union
    select  InvoicesId, 
      Vat1= case v.Code when 1 then od.TotalAfterDiscount else 0 end,
      Vat2= case v.Code when 2 then od.TotalAfterDiscount else 0 end,
      Vat3= case v.Code when 3 then od.TotalAfterDiscount else 0 end,
      Vat4= case v.Code when 4 then od.TotalAfterDiscount else 0 end,
      Vat5= case v.Code when 5 then od.TotalAfterDiscount else 0 end,
      Vat1Pst= case v.Code when 1 THEN v.Percentage else 0 end,
      Vat2Pst= case v.Code when 2 then v.Percentage else 0 end,
      Vat3Pst= case v.Code when 3 then v.Percentage else 0 end,
      Vat4Pst= case v.Code when 4 then v.Percentage else 0 end,
      Vat5Pst= case v.Code when 5 then v.Percentage else 0 end
    from OrderDetailInvoices odi
    LEFT OUTER Join OrderDetailIgredients od ON od.Id = odi.OrderDetailId
    LEFT OUTER JOIN OrderDetailIgredientVatAnal odva on od.Id = odva.OrderDetailIgredientsId
    LEFT OUTER JOIN Vat v ON v.Id = odva.VatId
    where IsNull(odi.IsDeleted, 0) != 1 
     ) nested group by InvoicesId  

   ) as odiv on odiv.InvoicesId = a.Id
  inner join ( Select InvoicesId,
         AccountId,
         AccountType = a.Type,
         AccountDescription = a.Description,
         Room = g.Room,
         TransAmount = Sum( Amount )
        from Transactions t
        left outer join Accounts a on t.AccountId = a.Id
        left outer join Invoice_Guests_Trans igt on igt.TransactionId = t.Id
        left outer join Guest g on igt.GuestId = g.Id

        where IsNull( t.isDeleted, 0 ) != 1
        group by InvoicesId, AccountId, a.Type, a.Description, g.Room ) as t on t.InvoicesId = a.Id
</value>
  </data>
  <data name="customSqlQuery6.Sql" xml:space="preserve">
    <value>SELECT Id
      ,Description
      ,InvoiceTypeId
      ,Counter
      ,Day
      ,IsPrinted
      ,GuestId
      ,Total
      ,Discount
      ,Vat
      ,Tax
      ,Net
      ,StaffId
      ,Cover
      ,TableId
      ,PosInfoId
      ,PdaModuleId
      ,ClientPosId
      ,EndOfDayId
      ,PosInfoDetailId
      ,IsVoided
      ,IsDeleted
      ,DiscountRemark
  ,'' as TableCode
  ,'' as Rooms
  ,'' as IsPaid
  FROM Invoices
  WHERE id = -1</value>
  </data>
  <data name="sqlDataSource1.ResultSchemaSerializable" xml:space="preserve">
    <value>PERhdGFTZXQgTmFtZT0ic3FsRGF0YVNvdXJjZTEiPjxWaWV3IE5hbWU9IkFjY291bnRzIj48RmllbGQgTmFtZT0iSWQiIFR5cGU9IkludDY0IiAvPjxGaWVsZCBOYW1lPSJEZXNjcmlwdGlvbiIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJUeXBlIiBUeXBlPSJJbnQxNiIgLz48L1ZpZXc+PFZpZXcgTmFtZT0iRGVwYXJ0bWVudHMiPjxGaWVsZCBOYW1lPSJJZCIgVHlwZT0iSW50NjQiIC8+PEZpZWxkIE5hbWU9IkRlc2NyaXB0aW9uIiBUeXBlPSJTdHJpbmciIC8+PC9WaWV3PjxWaWV3IE5hbWU9Ikludm9pY2VUeXBlcyI+PEZpZWxkIE5hbWU9IklkIiBUeXBlPSJJbnQ2NCIgLz48RmllbGQgTmFtZT0iVHlwZSIgVHlwZT0iSW50MTYiIC8+PEZpZWxkIE5hbWU9IkFiYnJldmlhdGlvbiIgVHlwZT0iU3RyaW5nIiAvPjwvVmlldz48VmlldyBOYW1lPSJQb3NJbmZvcyI+PEZpZWxkIE5hbWU9IklkIiBUeXBlPSJJbnQ2NCIgLz48RmllbGQgTmFtZT0iQ29kZSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJEZXNjcmlwdGlvbiIgVHlwZT0iU3RyaW5nIiAvPjwvVmlldz48VmlldyBOYW1lPSJRdWVyeSI+PEZpZWxkIE5hbWU9IklzRGVsZXRlZCIgVHlwZT0iQm9vbGVhbiIgLz48RmllbGQgTmFtZT0iQWJicmV2aWF0aW9uIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkNvdW50ZXIiIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJEYXkiIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJBY2NvdW50SWQiIFR5cGU9IkludDY0IiAvPjxGaWVsZCBOYW1lPSJBY2NvdW50VHlwZSIgVHlwZT0iSW50MTYiIC8+PEZpZWxkIE5hbWU9IkFjY291bnREZXNjcmlwdGlvbiIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJEZXBhcnRtZW50SWQiIFR5cGU9IkludDY0IiAvPjxGaWVsZCBOYW1lPSJEZXBhcnRtZW50RGVzY3JpcHRpb24iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iUG9zSW5mb0lkIiBUeXBlPSJJbnQ2NCIgLz48RmllbGQgTmFtZT0iUG9zSW5mb0NvZGUiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iUG9zSW5mb0Rlc2NyaXB0aW9uIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IlRhYmxlQ29kZSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJSb29tIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9Ikludm9pY2VUeXBlIiBUeXBlPSJJbnQxNiIgLz48RmllbGQgTmFtZT0idmF0MSIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0idmF0MiIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0idmF0MyIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0idmF0NCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0idmF0NSIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iVmF0MVBzdCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iVmF0MlBzdCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iVmF0M1BzdCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iVmF0NFBzdCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iVmF0NVBzdCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iVHJhbnNBbW91bnQiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9Ikludm9pY2VUb3RhbCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iSW52b2ljZURpc2NvdW50IiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJJbnZvaWNlRGlzY291bnRSZW1hcmsiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iSXNWb2lkZWQiIFR5cGU9IkJvb2xlYW4iIC8+PEZpZWxkIE5hbWU9IklzUGFpZCIgVHlwZT0iSW50MzIiIC8+PEZpZWxkIE5hbWU9IlN0YWZmQ29kZSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJTdGFmTmFtZSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJGT0RheSIgVHlwZT0iRGF0ZVRpbWUiIC8+PEZpZWxkIE5hbWU9Ik5vdEF1ZGl0ZWQiIFR5cGU9IkludDY0IiAvPjwvVmlldz48VmlldyBOYW1lPSJRdWVyeV9GYXN0U3RhcnQiPjxGaWVsZCBOYW1lPSJJZCIgVHlwZT0iSW50NjQiIC8+PEZpZWxkIE5hbWU9IkRlc2NyaXB0aW9uIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9Ikludm9pY2VUeXBlSWQiIFR5cGU9IkludDY0IiAvPjxGaWVsZCBOYW1lPSJDb3VudGVyIiBUeXBlPSJJbnQzMiIgLz48RmllbGQgTmFtZT0iRGF5IiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iSXNQcmludGVkIiBUeXBlPSJCb29sZWFuIiAvPjxGaWVsZCBOYW1lPSJHdWVzdElkIiBUeXBlPSJJbnQ2NCIgLz48RmllbGQgTmFtZT0iVG90YWwiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IkRpc2NvdW50IiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJWYXQiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IlRheCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iTmV0IiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJTdGFmZklkIiBUeXBlPSJJbnQ2NCIgLz48RmllbGQgTmFtZT0iQ292ZXIiIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJUYWJsZUlkIiBUeXBlPSJJbnQ2NCIgLz48RmllbGQgTmFtZT0iUG9zSW5mb0lkIiBUeXBlPSJJbnQ2NCIgLz48RmllbGQgTmFtZT0iUGRhTW9kdWxlSWQiIFR5cGU9IkludDY0IiAvPjxGaWVsZCBOYW1lPSJDbGllbnRQb3NJZCIgVHlwZT0iSW50NjQiIC8+PEZpZWxkIE5hbWU9IkVuZE9mRGF5SWQiIFR5cGU9IkludDY0IiAvPjxGaWVsZCBOYW1lPSJQb3NJbmZvRGV0YWlsSWQiIFR5cGU9IkludDY0IiAvPjxGaWVsZCBOYW1lPSJJc1ZvaWRlZCIgVHlwZT0iQm9vbGVhbiIgLz48RmllbGQgTmFtZT0iSXNEZWxldGVkIiBUeXBlPSJCb29sZWFuIiAvPjxGaWVsZCBOYW1lPSJEaXNjb3VudFJlbWFyayIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJUYWJsZUNvZGUiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iUm9vbXMiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iSXNQYWlkIiBUeXBlPSJTdHJpbmciIC8+PC9WaWV3PjwvRGF0YVNldD4=</value>
  </data>
</root>